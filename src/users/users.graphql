extend schema
  @link(url: "https://specs.apollo.dev/federation/v2.3",
        import: ["@key", "@shareable","@external"])

directive @key(fields: String!) on OBJECT | INTERFACE

directive @external on OBJECT | FIELD_DEFINITION

scalar DateTime

scalar EmailAddress

scalar PhoneNumber


type User @key(fields: "id"){
  # Example field (placeholder)
  id: ID!
  firstname: String
  lastname: String
  balance: Float
  email: EmailAddress
  password: String
  username: String
  dateOfBirth: DateTime
  sex: String
  profilePictureUrl: String
  city: String
  nationality: String
  address: String
  phone: String
  permissions: [String]
  isActive: Boolean
  passwordReset: String
  passwordResetExp: DateTime
  activationToken: String
  activationTokenExp: DateTime
  followers: [User]
  following: [User]
  pages: [User]
  managers: [User]
  ownerId: String
  owner: User
  createdAt: DateTime
  updatedAt: DateTime
}


input CreateUserInput {
  # Example field (placeholder)
  firstname: String
  lastname: String
  email: EmailAddress
  password: String
  username: String
  dateOfBirth: DateTime
  sex: String
  permissions: [String]
  createdAt: DateTime
}




input UpdateUserInput {
  firstname: String
  lastname: String
  email: EmailAddress
  dateOfBirth: DateTime
  sex: String
  profilePictureUrl: String
  city: String
  nationality: String
  address: String
  phone: PhoneNumber
  password: String
  username: String
  permissions: [String]
  updatedAt: DateTime
}

input UpdatePasswordInput {
  oldPassword: String!
  password: String!
}

extend type Query {
  users: [User]!
  user(id: String!): User
  findByUsername(username:String!):User
  findPageByUsername(username:String!):User
  experts: [User]!
  me: User
  searchForUsers(text: String): [User]!
}

type Mutation {
  signup(createUserInput: CreateUserInput!): User!
  createPage(createUserInput: CreateUserInput!): User 
  activateUserAccount(activationToken: String!): User!
  forgotPassword(email: String!): User!
  resetPassword(token: String!, password: String!): User!
  updatePassword(updatePasswordInput: UpdatePasswordInput): String!
  updateBalance(amount: Int): String!
  blockUnblockUser(userId:String): User
  addExpertPermission(userId: String): User
  removeExpertPermission(userId: String): User
  updateUser(id: String!, updateUserInput: UpdateUserInput!): User!
  removeUser(id: String!): User
}
